package ${package}.modules.${moduleName}.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import ${package}.common.base.impl.BaseServiceImpl;
import ${package}.common.utils.ConvertUtils;
import ${package}.modules.${moduleName}.dao.${className}Dao;
import ${package}.modules.${moduleName}.dto.${className}Dto;
import ${package}.modules.${moduleName}.entity.${className}Entity;
import ${package}.modules.${moduleName}.service.${className}Service;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;

/**
 * <p>
 * ${comments}
 * </p>
 *
 * @author: ${author}
 * @version: 1.0
 * @date: Created in ${datetime}
 * @package:  ${package}.${moduleName}.entity
 * @modified: ${author}
 * @description: ${comments}
 * @copyright: Copyright (c) ${date}
 */
@Service
public class ${className}ServiceImpl extends BaseServiceImpl<${className}Dao, ${className}Entity, ${className}Dto> implements ${className}Service {

    @Override
    public LambdaQueryWrapper<${className}Entity> toQueryWrapper(Map<String, Object> params) {
        LambdaQueryWrapper<${className}Entity> wrapper = Wrappers.lambdaQuery();
        wrapper.eq(params.containsKey("name"), ${className}Entity::getName, params.get("name"));
        return wrapper;
    }

    @Override
    public LambdaUpdateWrapper<${className}Entity> toUpdateWrapper(${className}Entity entity) {
        LambdaUpdateWrapper<${className}Entity> wrapper = Wrappers.lambdaUpdate();
        wrapper.eq(${className}Entity::getId, entity.getId());
        return wrapper;
    }

    @Override
    public List<${className}Dto> toTarget(List<${className}Entity> source) {
        return ConvertUtils.sourceToTarget(source, ${className}Dto.class);
    }

    @Override
    public ${className}Dto toTarget(${className}Entity source) {
        return ConvertUtils.sourceToTarget(source, ${className}Dto.class);
    }


}